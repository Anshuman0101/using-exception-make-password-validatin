// WRITE A PROGRAMME TO TAKE AN PASSWORD INPUT WHICH HAVE LIMITED NUMBER OF PASSWORD AND PASSWORD MUST HAVE NUMBER,STRING AND SPECIAL CHARACTER....
package Exception_pro1;

import java.util.Scanner;

public class user_information {

String Pass,Us_id;// DECLARATION OF VARIABLE NAME....
private String paswrd,user_Id;
static int pass_leng=10;
Scanner sc=new Scanner(System.in);
public static void main(String[] args) {
	user_information us=new user_information();// MAIN CLASS OF THIS PROGRAME.....
	us.USERID();
}

// CREATING FUNCTION OF NAME USERID  TO PRINT   USER_id ...
 public void USERID() {
	 System.out.println("Enter your user_ID :-  ");
	 user_Id=sc.nextLine();
	 paswrd();
 }
 // CREATING ANOTHER FUNCTION OF NAME PASWRD TO  TAKE AND PRINT PASSWORD....
 
public void paswrd() {
	System.out.println("ENTER YOUR PASSWORD :- \n PASSWORD SHOULD NOT CONTAIN ANY SPACE.\n"
			+ "PASSWORD SHOULD CONTAIN AT LIST TWO DIGIT(0-9).\n"
			+ "PASSWORD MUST CONTAIN AT LIST 10 CHARACTER\n"
			+ "PASSWORD MUST CONTAIN ONE UPPERCASE LETTER (A-Z) AND ONE LOWERCASE(a-z)\n"
			+ "PASSWORD MUST CONTAIN ONE OR MORE SPECIAL CHARACTER( @, #, %, $,ETC.)");
	Pass=sc.next();
	try {
		//TRY IS FOR PASSWORD TO CHECK VALIDATION  HERE .....
		if(pasword_validation(Us_id)) {
			System.out.println("valid Password: "+Us_id);
			pri_detail();
		}else {
			throw new Exception("Ivalid Password...");
		}
	}
	catch(Exception a1) {
		System.out.println(a1);
	}
}
	
// METHOD OR FUNCTION FOR CHECKING SPACE CONDITION
public static boolean space(String paswrd) {
	if(paswrd.contains(" ")) {//CHECKING FOR SPACE CONDITION......
	return false;
}
	return false;
}
//METHOD FOR CHECKING PASSWORD LENGHT CONDITION ....
public static boolean pasword_validation(String paswrd) {
	if(paswrd.length()< pass_leng)return false;//CONDITION FOR PASSWORD LENGTH....
	int charCount =0;
	int numCount =0;
	for(int i=0;i<paswrd.length();i++) {
		char ch=paswrd.charAt(i);
		if(is_Numeric (ch))numCount++;
		else if(upper_letter(ch))charCount++;
		else if(lower_letter(ch))charCount++;
		else if ((paswrd.contains("@")||paswrd.contains("#")
				||paswrd.contains("!")||paswrd.contains("~")
				||paswrd.contains("$")|| paswrd.contains("%")
				||paswrd.contains("^")||paswrd.contains("&")
				||paswrd.contains("*")|| paswrd.contains("(")
				||paswrd.contains(")")||paswrd.contains("-")
				||paswrd.contains("+")||paswrd.contains("/")
				||paswrd.contains(":")||paswrd.contains(".")
				||paswrd.contains(",")||paswrd.contains("<")
				||paswrd.contains(">")||paswrd.contains("?")
				||paswrd.contains("|")));
		else return false;//IF  EVERY IS FALSE... 
	}
	return(charCount  >=2 && numCount>=2);
}
	//FUNCTION FOR CREATING CONDITION PASSWORD IN CAPITAL LETTER....
	public static boolean upper_letter(char ch) {
		ch=Character.toUpperCase(ch);
		return(ch>='A'&& ch<='Z');
	}
	//TO PRINT SMALL LETTER....
	public static boolean lower_letter(char ch) {
		ch=Character.toLowerCase(ch);
		return(ch>='a'&& ch<='z');
	}
	//function for checking condition for password ....
	public static boolean is_Numeric (char ch) {
		return(ch>='0'&&ch<='9');
	}
	public void pri_detail() {
		System.out.println("ID OF YOUR :-"+user_Id);
		System.out.println("PASSWORD OF YOUR :-"+paswrd);
	
	
	
	}
}